package com.fastcampus.ch2;

import java.net.URLEncoder;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;

@Controller
@RequestMapping("/login")
public class LoginController
{
	@GetMapping("/login") // 일단 처음에 http://localhost/ch2/login/login으로 들어오면 View를 보여줘야 하니까...(뇌피셜)
	public String loginForm()
	{
		return "loginForm"; // 아무것도 없이 들어오면, 로그인 관련 정보를 입력하는 View를 보여준다.
	}
	
	@GetMapping("/logout")
	public String logout(HttpSession session) // 로그아웃을 하기 위해서는
	{
		// 1. 세션을 종료시킨다.
		session.invalidate();
		
		// 2. 홈으로 이동하게 만든다.
		return "redirect:/"; // 홈으로 redirect시킨다.
	}
	
	@PostMapping("/login") // loginForm에서 작성한 자료들이 여기의 매개변수로 들어오게 된다.
	public String login(@CookieValue("id") String cookieID, String id, String pwd, String toURL, boolean rememberId,
			HttpServletRequest request, HttpServletResponse response) throws Exception
	{
		// 1. id와 pwd를 확인하여, 일치하지 않으면 redirect로 로그인을 다시 시도하게 한다.
		if(!loginCheck(id,pwd))
		{
			String msg = URLEncoder.encode("id 또는 pwd가 일치하지 않습니다." , "utf-8");
			return "redirect:/login/login?msg="+msg; // 메세지도 같이 띄워줘
		}
		
		// 2. id와 pwd가 일치하면, 세션 객체를 생성하여 얻어올 수 있도록 한다.
		HttpSession session = request.getSession();
		
		// 세션 객체에 id를 저장한다.
		session.setAttribute("id", id);
		
		// 만약에 ID 기록 체크박스에 체크를 했다면, 쿠키에 저장하고, 그렇지 않으면 쿠키를 삭제한다.
		if(rememberId)
		{
			// 1) 쿠키를 생성한다.
			Cookie cookie = new Cookie("id", id);
			
			// 2) 응답에 저장한다.
			response.addCookie(cookie);
		}
		else // 쿠키 삭제
		{
			// 1) 쿠키를 삭제
			Cookie cookie = new Cookie("id", id);
			cookie.setMaxAge(0); // 시간을 0으로 만들고 나서, 쿠키를 등록하면 쿠키가 삭제된다.
			
			// 2) 응답에 저장
			response.addCookie(cookie); // 이거 빼먹으면 의미가 없다.
		}
		// 3) 홈으로 이동
		toURL = toURL==null || toURL.equals("") ? "/" : toURL; // null이거나 빈문자열이라면, home로 가라.
		//근데 이전에 찍혀있던 값이 있다면, toURL로 가라.(로그아웃 상태에서 Board를 들어가려고 한 상황.)
		
		return "redirect:" + toURL;
		//redirect는 
	}

	private boolean loginCheck(String id, String pwd)
	{
		return "asdf".equals(id) && "1234".equals(pwd);
	}
}